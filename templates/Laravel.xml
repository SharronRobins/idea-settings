<templateSet group="Laravel">
  <template name="fill" value="protected $fillable = [&#10;  '$END$'&#10;];" description="Laravel $fillable property" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="PHP Class Member" value="true" />
    </context>
  </template>
  <template name="casts" value="protected $casts = [&#10;  'id' =&gt; 'int',&#10;  '$KEY$' =&gt; '$TYPE$'$END$&#10;];" description="Laravel $casts property" toReformat="true" toShortenFQNames="true">
    <variable name="KEY" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="TYPE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP Class Member" value="true" />
    </context>
  </template>
  <template name="hasOne" value="public function $FUNCTION$(): HasOne {&#10;  return $this-&gt;hasOne($CLASS$::class$END$);&#10;}" description="Laravel hasOne" toReformat="true" toShortenFQNames="true">
    <variable name="FUNCTION" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="CLASS" expression="capitalize(camelCase(FUNCTION))" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP Class Member" value="true" />
    </context>
  </template>
  <template name="belongsTo" value="public function $FUNCTION$(): BelongsTo {&#10;  return $this-&gt;belongsTo($CLASS$::class$END$);&#10;}" description="Laravel belongsTo" toReformat="true" toShortenFQNames="true">
    <variable name="FUNCTION" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="CLASS" expression="capitalize(camelCase(FUNCTION))" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP Class Member" value="true" />
    </context>
  </template>
  <template name="hasMany" value="public function $FUNCTION$s(): HasMany {&#10;  return $this-&gt;hasMany($CLASS$::class$END$);&#10;}" description="Laravel hasMany" toReformat="true" toShortenFQNames="true">
    <variable name="FUNCTION" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="CLASS" expression="capitalize(camelCase(FUNCTION))" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP Class Member" value="true" />
    </context>
  </template>
  <template name="belongsToMany" value="public function $FUNCTION$s(): BelongsToMany {&#10;  return $this-&gt;belongsToMany($CLASS$::class$END$);&#10;}" description="Laravel belongsToMany" toReformat="true" toShortenFQNames="true">
    <variable name="FUNCTION" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="CLASS" expression="capitalize(camelCase(FUNCTION))" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP Class Member" value="true" />
    </context>
  </template>
  <template name="hasManyThrough" value="public function $FUNCTION$s(): HasManyThrough {&#10;  return $this-&gt;hasManyThrough($CLASS$::class, $SECOND$::class$END$);&#10;}" description="Laravel hasManyThrough" toReformat="true" toShortenFQNames="true">
    <variable name="FUNCTION" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="CLASS" expression="capitalize(camelCase(FUNCTION))" defaultValue="" alwaysStopAt="true" />
    <variable name="SECOND" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP Class Member" value="true" />
    </context>
  </template>
  <template name="morphMany" value="public function $FUNCTION$s(): MorphMany {&#10;  return $this-&gt;morphMany($CLASS$::class, '$COLUMN_PREFIX$'$END$);&#10;}" description="Laravel morphMany" toReformat="true" toShortenFQNames="true">
    <variable name="FUNCTION" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="CLASS" expression="capitalize(camelCase(FUNCTION))" defaultValue="" alwaysStopAt="true" />
    <variable name="COLUMN_PREFIX" expression="concat(snakeCase(FUNCTION), &quot;able&quot;)" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP Class Member" value="true" />
    </context>
  </template>
  <template name="morphTo" value="public function $FUNCTION$s(): MorphTo {&#10;  return $this-&gt;morphTo();&#10;}" description="Laravel morphTo" toReformat="true" toShortenFQNames="true">
    <variable name="FUNCTION" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP Class Member" value="true" />
    </context>
  </template>
  <template name="timestamps" value="public $timestamps = $ENABLE$;" description="Laravel $timestamps property" toReformat="true" toShortenFQNames="true">
    <variable name="ENABLE" expression="" defaultValue="&quot;false&quot;" alwaysStopAt="true" />
    <context>
      <option name="PHP Class Member" value="true" />
    </context>
  </template>
  <template name="attr" value="public function get$ATTRIBUTE$Attribute() {&#10;    return $END$&#10;}" description="Laravel getSomethingAttribute method" toReformat="true" toShortenFQNames="true">
    <variable name="ATTRIBUTE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP Class Member" value="true" />
    </context>
  </template>
  <template name="scope" value="public function scope$ATTRIBUTE$(Builder $query) {&#10;    return $END$&#10;}" description="Laravel scopeSomething method" toReformat="true" toShortenFQNames="true">
    <variable name="ATTRIBUTE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP Class Member" value="true" />
    </context>
  </template>
</templateSet>